@page "/user/delete/{id:int}"
@using BlazorCRUDSqlLiteApp.Shared.Models
@inject HttpClient http
@inject NavigationManager navigationManager
@inject IJSRuntime JsRuntime

<PageTitle>Delete User</PageTitle>
<h1>Delete User</h1>

<div class="form-group">
    <h4>Do you want to delete this User?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Name</td>
                <td>@user.Username</td>
            </tr>
            <tr>
                <td>Address</td>
                <td>@user.Address</td>
            </tr>
            <tr>
                <td>Contact No</td>
                <td>@user.Cellnumber</td>
            </tr>
            <tr>
                <td>Email Id</td>
                <td>@user.Emailid</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" class="btn btn-danger" @onclick="(async () => await RemoveUser(user))" />
    <input type="submit" value="Cancel" class="btn btn-light" @onclick="(() => Cancel())" />
</div>

@code {
    [Parameter]
    public int id { get; set; }
    User user = new User();

    protected override async Task OnInitializedAsync()
    {
        await GetUser();
    }

    protected async Task GetUser()
    {
        user = await http.GetFromJsonAsync<User>("api/User/GetUser/" + id);
    }

    protected async Task RemoveUser(User user)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete the user '{user.Username}'?");
        if (confirmed)
        {
            await http.DeleteAsync("api/User/DeleteUser/" + user.Userid);
            Cancel();
        }

    }

    public void Cancel()
    {
        navigationManager.NavigateTo("/fetchuserdetails");
    }
}
